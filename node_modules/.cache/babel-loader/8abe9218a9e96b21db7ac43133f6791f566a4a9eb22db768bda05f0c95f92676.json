{"ast":null,"code":"// userMessages useEffect kısmını şöyle güncelleyelim\nuseEffect(() => {\n  const messagesRef = collection(db, 'support_messages');\n  const q = query(messagesRef, where('userId', '==', userId));\n  const unsubscribe = onSnapshot(q, querySnapshot => {\n    const messages = [];\n    querySnapshot.forEach(doc => {\n      messages.push({\n        ...doc.data(),\n        id: doc.id\n      });\n    });\n\n    // Ana mesajları ve yanıtları gruplayalım\n    const groupedMessages = messages.reduce((acc, msg) => {\n      if (!msg.parentMessageId) {\n        if (!acc[msg.id]) {\n          acc[msg.id] = {\n            main: msg,\n            replies: []\n          };\n        } else {\n          acc[msg.id].main = msg;\n        }\n      } else {\n        if (!acc[msg.parentMessageId]) {\n          acc[msg.parentMessageId] = {\n            replies: [msg]\n          };\n        } else {\n          acc[msg.parentMessageId].replies.push(msg);\n        }\n      }\n      return acc;\n    }, {});\n    setUserMessages(Object.values(groupedMessages));\n  });\n  return () => unsubscribe();\n}, [userId]);","map":{"version":3,"names":["useEffect","messagesRef","collection","db","q","query","where","userId","unsubscribe","onSnapshot","querySnapshot","messages","forEach","doc","push","data","id","groupedMessages","reduce","acc","msg","parentMessageId","main","replies","setUserMessages","Object","values"],"sources":["C:/Users/My/306project/src/pages/SupportPage.js"],"sourcesContent":["\r\n// userMessages useEffect kısmını şöyle güncelleyelim\r\nuseEffect(() => {\r\n  const messagesRef = collection(db, 'support_messages');\r\n  const q = query(messagesRef, where('userId', '==', userId));\r\n  \r\n  const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n    const messages = [];\r\n    querySnapshot.forEach((doc) => {\r\n      messages.push({\r\n        ...doc.data(),\r\n        id: doc.id\r\n      });\r\n    });\r\n    \r\n    // Ana mesajları ve yanıtları gruplayalım\r\n    const groupedMessages = messages.reduce((acc, msg) => {\r\n      if (!msg.parentMessageId) {\r\n        if (!acc[msg.id]) {\r\n          acc[msg.id] = {\r\n            main: msg,\r\n            replies: []\r\n          };\r\n        } else {\r\n          acc[msg.id].main = msg;\r\n        }\r\n      } else {\r\n        if (!acc[msg.parentMessageId]) {\r\n          acc[msg.parentMessageId] = {\r\n            replies: [msg]\r\n          };\r\n        } else {\r\n          acc[msg.parentMessageId].replies.push(msg);\r\n        }\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    setUserMessages(Object.values(groupedMessages));\r\n  });\r\n\r\n  return () => unsubscribe();\r\n}, [userId]);\r\n"],"mappings":"AACA;AACAA,SAAS,CAAC,MAAM;EACd,MAAMC,WAAW,GAAGC,UAAU,CAACC,EAAE,EAAE,kBAAkB,CAAC;EACtD,MAAMC,CAAC,GAAGC,KAAK,CAACJ,WAAW,EAAEK,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAEC,MAAM,CAAC,CAAC;EAE3D,MAAMC,WAAW,GAAGC,UAAU,CAACL,CAAC,EAAGM,aAAa,IAAK;IACnD,MAAMC,QAAQ,GAAG,EAAE;IACnBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;MAC7BF,QAAQ,CAACG,IAAI,CAAC;QACZ,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;QACbC,EAAE,EAAEH,GAAG,CAACG;MACV,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA,MAAMC,eAAe,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACpD,IAAI,CAACA,GAAG,CAACC,eAAe,EAAE;QACxB,IAAI,CAACF,GAAG,CAACC,GAAG,CAACJ,EAAE,CAAC,EAAE;UAChBG,GAAG,CAACC,GAAG,CAACJ,EAAE,CAAC,GAAG;YACZM,IAAI,EAAEF,GAAG;YACTG,OAAO,EAAE;UACX,CAAC;QACH,CAAC,MAAM;UACLJ,GAAG,CAACC,GAAG,CAACJ,EAAE,CAAC,CAACM,IAAI,GAAGF,GAAG;QACxB;MACF,CAAC,MAAM;QACL,IAAI,CAACD,GAAG,CAACC,GAAG,CAACC,eAAe,CAAC,EAAE;UAC7BF,GAAG,CAACC,GAAG,CAACC,eAAe,CAAC,GAAG;YACzBE,OAAO,EAAE,CAACH,GAAG;UACf,CAAC;QACH,CAAC,MAAM;UACLD,GAAG,CAACC,GAAG,CAACC,eAAe,CAAC,CAACE,OAAO,CAACT,IAAI,CAACM,GAAG,CAAC;QAC5C;MACF;MACA,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAENK,eAAe,CAACC,MAAM,CAACC,MAAM,CAACT,eAAe,CAAC,CAAC;EACjD,CAAC,CAAC;EAEF,OAAO,MAAMT,WAAW,CAAC,CAAC;AAC5B,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}